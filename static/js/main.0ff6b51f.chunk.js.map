{"version":3,"sources":["Preview.js","Speed.js","App.js","GetText.js","serviceWorker.js","index.js"],"names":["props","text","split","className","map","s","i","color","userInput","length","key","style","backgroundColor","sec","symbols","wpm","Math","round","initialState","texts","floor","random","GetText","started","finished","App","state","onRestart","setState","onInputChange","event","val","target","value","setTimer","onFinish","countSymbols","replace","filter","interval","setInterval","prevProps","this","clearInterval","Preview","onChange","placeholder","readOnly","Speed","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4OAEe,G,MAAA,SAACA,GACd,IAAMC,EAAOD,EAAMC,KAAKC,MAAM,IAC9B,OACE,yBAAKC,UAAU,2BACZF,EAAKG,KAAI,SAACC,EAAGC,GACZ,IAAIC,EAIJ,OAHID,EAAIN,EAAMQ,UAAUC,SACtBF,EAAQF,IAAML,EAAMQ,UAAUF,GAAK,UAAY,WAG/C,0BAAMI,IAAKJ,EAAGK,MAAO,CAAEC,gBAAiBL,IACrCF,SCXE,WAACL,GACd,IAAMa,EAAMb,EAAMa,IACZC,EAAUd,EAAMc,QAEtB,GAAgB,IAAZA,GAAyB,IAARD,EAAW,CAC9B,IAAME,EAAMD,EAAU,GAAKD,EAAM,IACjC,OAAO,6BAAMG,KAAKC,MAAMF,GAAjB,QAGT,OAAO,MCLHG,EAAe,CACnBjB,KCLa,WACb,IAAMkB,EAAQ,CAAC,6hCAAD,u2CA8Bd,OAAOA,EAAMH,KAAKI,MAAMJ,KAAKK,SAAWF,EAAMV,SD1BxCa,GACNd,UAAW,GACXM,QAAS,EACTD,IAAK,EACLU,SAAS,EACTC,UAAU,GA2EGC,E,4MAxEbC,MAAQR,E,EACRS,UAAY,WACV,EAAKC,SAASV,I,EAEhBW,cAAgB,SAACC,GACf,IAAMC,EAAMD,EAAME,OAAOC,MACzB,EAAKC,WACL,EAAKC,SAASJ,GACd,EAAKH,SAAS,CACZpB,UAAWuB,EACXjB,QAAS,EAAKsB,aAAaL,M,EAW/BK,aAAe,SAAC5B,GACd,IAAMP,EAAO,EAAKyB,MAAMzB,KAAKoC,QAAQ,IAAK,IAC1C,OAAO7B,EACJ6B,QAAQ,IAAK,IACbnC,MAAM,IACNoC,QAAO,SAACjC,EAAGC,GAAJ,OAAUD,IAAMJ,EAAKK,MAAIG,Q,EAGrCyB,SAAW,WACJ,EAAKR,MAAMH,UACd,EAAKK,SAAS,CAAEL,SAAS,IACzB,EAAKgB,SAAWC,aAAY,WAC1B,EAAKZ,UAAS,SAACa,GACb,MAAO,CAAE5B,IAAK4B,EAAU5B,IAAM,QAE/B,O,uDAtBEL,GACHA,IAAckC,KAAKhB,MAAMzB,OAC3B0C,cAAcD,KAAKH,UACnBG,KAAKd,SAAS,CAAEJ,UAAU,O,+BAwB5B,OACE,yBAAKrB,UAAU,uBACb,wBAAIA,UAAU,iCAAd,2BAGA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,2BACb,kBAACyC,EAAD,CAAS3C,KAAMyC,KAAKhB,MAAMzB,KAAMO,UAAWkC,KAAKhB,MAAMlB,YACtD,8BACEyB,MAAOS,KAAKhB,MAAMlB,UAClBqC,SAAUH,KAAKb,cACf1B,UAAU,oBACV2C,YAAY,iBACZC,SAAUL,KAAKhB,MAAMF,WAEvB,kBAACwB,EAAD,CAAOlC,QAAS4B,KAAKhB,MAAMZ,QAASD,IAAK6B,KAAKhB,MAAMb,MACpD,yBAAKV,UAAU,sBACb,4BACEA,UAAU,0BACV8C,QAASP,KAAKf,WAFhB,mB,GA3DIuB,aEFEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0ff6b51f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default (props) => {\r\n  const text = props.text.split(\"\");\r\n  return (\r\n    <div className=\"border rounded p-3 mb-4\">\r\n      {text.map((s, i) => {\r\n        let color;\r\n        if (i < props.userInput.length) {\r\n          color = s === props.userInput[i] ? \"#dfffa0\" : \"#fcbea4\";\r\n        }\r\n        return (\r\n          <span key={i} style={{ backgroundColor: color }}>\r\n            {s}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  const sec = props.sec;\r\n  const symbols = props.symbols;\r\n\r\n  if (symbols !== 0 && sec !== 0) {\r\n    const wpm = symbols / 5 / (sec / 60);\r\n    return <div>{Math.round(wpm)} WPM</div>;\r\n  }\r\n\r\n  return null;\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Preview from \"./Preview\";\nimport Speed from \"./Speed\";\nimport GetText from \"./GetText\";\n\nconst initialState = {\n  text: GetText(),\n  userInput: \"\",\n  symbols: 0,\n  sec: 0,\n  started: false,\n  finished: false,\n};\nclass App extends Component {\n  state = initialState;\n  onRestart = () => {\n    this.setState(initialState);\n  };\n  onInputChange = (event) => {\n    const val = event.target.value;\n    this.setTimer();\n    this.onFinish(val);\n    this.setState({\n      userInput: val,\n      symbols: this.countSymbols(val),\n    });\n  };\n\n  onFinish(userInput) {\n    if (userInput === this.state.text) {\n      clearInterval(this.interval);\n      this.setState({ finished: true });\n    }\n  }\n\n  countSymbols = (userInput) => {\n    const text = this.state.text.replace(\" \", \"\");\n    return userInput\n      .replace(\" \", \"\")\n      .split(\"\")\n      .filter((s, i) => s === text[i]).length;\n  };\n\n  setTimer = () => {\n    if (!this.state.started) {\n      this.setState({ started: true });\n      this.interval = setInterval(() => {\n        this.setState((prevProps) => {\n          return { sec: prevProps.sec + 1 };\n        });\n      }, 1000);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-5 mt-5\">\n        <h3 className=\"text-center mb-4 text-success\">\n          Typing speed Calculator\n        </h3>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-12 mx-auto\">\n            <Preview text={this.state.text} userInput={this.state.userInput} />\n            <textarea\n              value={this.state.userInput}\n              onChange={this.onInputChange}\n              className=\"form-control mb-3\"\n              placeholder=\"Start typing..\"\n              readOnly={this.state.finished}\n            ></textarea>\n            <Speed symbols={this.state.symbols} sec={this.state.sec} />\n            <div className=\"text-right mx-auto\">\n              <button\n                className=\"btn btn-outline-primary\"\n                onClick={this.onRestart}\n              >\n                Restart\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  const texts = [\r\n    `Well, and so we breakfasted at ten as usual; I thought it would never be over; for, \r\n    by the bye, you are to understand, that my uncle and aunt were horrid unpleasant \r\n    all the time I was with them. If you’ll believe me, I did not once put my foot \r\n    out of doors, though I was there a fortnight. Not one party, or scheme, or anything. \r\n    To be sure London was rather thin, but, however, the Little Theatre was open. Well, \r\n    and so just as the carriage came to the door, my uncle was called away upon business \r\n    to that horrid man Mr. Stone. And then, you know, when once they get together, there \r\n    is no end of it. Well, I was so frightened I did not know what to do, for my uncle was \r\n    to give me away; and if we were beyond the hour, we could not be married all day. But, \r\n    luckily, he came back again in ten minutes’ time, and then we all set out. However, \r\n    I recollected afterwards that if he had been prevented going, the wedding need not be \r\n    put off, for Mr. Darcy might have done as well.`,\r\n    `In the gallery there were many family portraits, but they could have little to \r\n    fix the attention of a stranger. Elizabeth walked in quest of the only face whose \r\n    features would be known to her. At last it arrested her--and she beheld a striking \r\n    resemblance to Mr. Darcy, with such a smile over the face as she remembered to have \r\n    sometimes seen when he looked at her. She stood several minutes before the picture, \r\n    in earnest contemplation, and returned to it again before they quitted the gallery. \r\n    Mrs. Reynolds informed them that it had been taken in his father’s lifetime.`,\r\n    `She did at last extort from her father an acknowledgment that the horses were engaged. \r\n    Jane was therefore obliged to go on horseback, and her mother attended her to the door \r\n    with many cheerful prognostics of a bad day. Her hopes were answered; Jane had not been \r\n    gone long before it rained hard. Her sisters were uneasy for her, but her mother was delighted. \r\n    The rain continued the whole evening without intermission; Jane certainly could not come back.`,\r\n    `I am no longer surprised at your knowing only six accomplished women. I rather wonder now at your knowing any.`,\r\n    `All this she must possess,” added Darcy, “and to all this she must yet add something more substantial, \r\n    in the improvement of her mind by extensive reading.`,\r\n  ];\r\n\r\n  return texts[Math.floor(Math.random() * texts.length)];\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}